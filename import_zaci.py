from flask import Flask
import pandas as pd
from db_config import db, DATABASE_URI
from models import Zak

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = DATABASE_URI
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db.init_app(app)

def import_zaci(soubor):
    try:
        with app.app_context():
            with db.session.no_autoflush:
                print(f"üöÄ Spou≈°t√≠m import ≈æ√°k≈Ø z {soubor}...")
                df = pd.read_excel(soubor)

                for index, row in df.iterrows():
                    jmeno = str(row['Jm√©no']).strip()  # Text
                    prijmeni = str(row['P≈ô√≠jmen√≠']).strip()  # Text
                    pohlavi = str(row.get('Pohlav√≠', 'neuvedeno')).strip().lower()  # Text

                    cislo_tridy = int(row['ƒå√≠slo t≈ô√≠dy']) if pd.notna(row.get('ƒå√≠slo t≈ô√≠dy')) else None  # Cel√© ƒç√≠slo
                    pismeno_tridy = str(row['P√≠smeno t≈ô√≠dy']).strip() if pd.notna(row.get('P√≠smeno t≈ô√≠dy')) else None  # Text
                    if pismeno_tridy and pismeno_tridy.startswith('.'):
                        pismeno_tridy = pismeno_tridy[1:]

                    rok_nastupu_2_stupen = int(row['Rok n√°stupu na 2. stupe≈à']) if 'Rok n√°stupu na 2. stupe≈à' in row and pd.notna(row['Rok n√°stupu na 2. stupe≈à']) else None  # Cel√© ƒç√≠slo
                    skolni_rok_odchodu_od = int(row['≈†koln√≠ rok odchodu z 2. stupnƒõ od']) if '≈†koln√≠ rok odchodu z 2. stupnƒõ od' in row and pd.notna(row.get('≈†koln√≠ rok odchodu z 2. stupnƒõ od')) else None  # Cel√© ƒç√≠slo
                    skolni_rok_odchodu_do = int(row['≈†koln√≠ rok odchodu z 2. stupnƒõ do']) if '≈†koln√≠ rok odchodu z 2. stupnƒõ do' in row and pd.notna(row.get('≈†koln√≠ rok odchodu z 2. stupnƒõ do')) else None  # Cel√© ƒç√≠slo

                    if not cislo_tridy or not rok_nastupu_2_stupen:
                        print(f"‚ö†Ô∏è P≈ôeskakuji ≈æ√°ka {jmeno} {prijmeni} - chyb√≠ ƒç√≠slo t≈ô√≠dy nebo rok n√°stupu.")
                        continue

                    if rok_nastupu_2_stupen is None:
                        print(f"‚ö†Ô∏è Pro ≈æ√°ka {jmeno} {prijmeni} chyb√≠ rok n√°stupu - p≈ôeskakuji")
                        continue

                    existing_zak = Zak.query.filter_by(jmeno=jmeno, prijmeni=prijmeni).first()
                    if existing_zak:
                        existing_zak.cislo_tridy = cislo_tridy
                        existing_zak.pismeno_tridy = pismeno_tridy
                        existing_zak.pohlavi = pohlavi
                        existing_zak.rok_nastupu_2_stupen = rok_nastupu_2_stupen
                        existing_zak.skolni_rok_odchodu_od = skolni_rok_odchodu_od
                        existing_zak.skolni_rok_odchodu_do = skolni_rok_odchodu_do
                    else:
                        # OPRAVA: Spr√°vn√° inicializace objektu bez pojmenovan√Ωch parametr≈Ø
                        new_zak = Zak()
                        new_zak.jmeno = jmeno
                        new_zak.prijmeni = prijmeni
                        new_zak.cislo_tridy = cislo_tridy
                        new_zak.pismeno_tridy = pismeno_tridy
                        new_zak.pohlavi = pohlavi
                        new_zak.rok_nastupu_2_stupen = rok_nastupu_2_stupen
                        new_zak.skolni_rok_odchodu_od = skolni_rok_odchodu_od
                        new_zak.skolni_rok_odchodu_do = skolni_rok_odchodu_do
                        db.session.add(new_zak)

                db.session.commit()
                print("‚úÖ Import ≈æ√°k≈Ø dokonƒçen!")
                return True
    except Exception as e:
        db.session.rollback()
        print(f"‚ùå Chyba p≈ôi importu ≈æ√°k≈Ø: {e}")
        return False

if __name__ == "__main__":
    with app.app_context():
        db.create_all()
        import_zaci("zaci.xlsx")